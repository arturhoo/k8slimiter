name: e2e
on: pull_request

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - uses: actions/checkout@v4

      - uses: ko-build/setup-ko@v0.7

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.12.0
        with:
          cluster_name: kind

      - name: Build k8smultiarcher image
        env:
          KO_DOCKER_REPO: kind.local
        run: |
          ko build -B --platform linux/amd64 .

      - name: Install cert-manager
        run: |
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.15.1/cert-manager.yaml
          kubectl wait --for=condition=available --timeout=60s deployment/cert-manager -n cert-manager
          kubectl wait --for=condition=available --timeout=60s deployment/cert-manager-cainjector -n cert-manager
          kubectl wait --for=condition=available --timeout=60s deployment/cert-manager-webhook -n cert-manager

      - name: Install k8slimiter
        run: |
          kubectl apply -f test/k8slimiter-kind.yaml
          kubectl wait --for=condition=available --timeout=60s deployment/k8slimiter-deployment -n k8slimiter
          sleep 5

      - name: Test k8slimiter
        run: |
          kubectl run "tmp-pod-$(date +%s)" --restart Never --image alpine -- sleep 1

          sleep 2
          if kubectl run "tmp-pod-$(date +%s)" --restart Never --image alpine -- sleep 1; then
            echo "Error: kubectl run command did not exit with status code 1"
            exit 1
          fi

          sleep 10
          kubectl run "tmp-pod-$(date +%s)" --restart Never --image alpine -- sleep 1

          sleep 10
          kubectl create deployment "tmp-deploy-$(date +%s)" --image=nginx

          sleep 2
          if kubectl create deployment "tmp-deploy-$(date +%s)" --image=nginx; then
            echo "Error: kubectl create deployment command did not exit with status code 1"
            exit 1
          fi
